plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.5'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'net.hackyourfuture'
if (version == 'unspecified') {
    version = '0.0.1-SNAPSHOT'
}
description = 'A modern Java reference app for courses, enrollments, and school workflows.'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

configurations {
    mockitoAgent
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    runtimeOnly 'org.postgresql:postgresql'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    mockitoAgent('org.mockito:mockito-core') {
        transitive = false
    }
}

test {
    useJUnitPlatform()
    testLogging {
        beforeTest { event -> println("Running test: ${event.displayName}") }
        afterTest { event, result -> println("Finished test: ${event.displayName} - ${result}") }
    }
    jvmArgs.add("-javaagent:${configurations.mockitoAgent.asPath}")
}

tasks.named("bootBuildImage") {
    imageName.set("ghcr.io/hackyourfuture/course-hub-backend")
    tags.set(["ghcr.io/hackyourfuture/course-hub-backend:" + version])
    publish.set(System.getenv("DOCKER_PUSH")?.toBoolean() ?: false)
}
